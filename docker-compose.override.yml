version: '3.8'

services:

  billing-service-nginx:
    build:
      context: .
      dockerfile: infra/nginx/Dockerfile
    container_name: billing-service-nginx
    restart: unless-stopped
    networks:
      - billing-service-network
    depends_on:
      - billing-service-api

  billing-service-postgres:
    image: postgres:14
    container_name: billing-service-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"
        ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - billing-service-network
    env_file:
      - ./.env
    volumes:
      - db_data:/var/lib/postgresql/data

  billing-service-api:
    container_name: billing-service-api
    restart: unless-stopped
    build:
      context: .
      dockerfile: infra/backend/Dockerfile
      target: main
    networks:
      - billing-service-network
    depends_on:
      billing-service-redis:
        condition: service_healthy
    env_file:
      - ./src/.env

  billing-service-redis:
    container_name: billing-service-redis
    image: redis:7.0.8-alpine
    restart: unless-stopped
    networks:
      - billing-service-network
    healthcheck:
      test: redis-cli ping >/dev/null || exit 1
      interval: 5s
      timeout: 5s
      retries: 5

  billing-service-migration:
    container_name: billing-service-migration
    build:
      context: .
      dockerfile: infra/backend/Dockerfile
    networks:
      - billing-service-network
    depends_on:
      billing-service-postgres:
        condition: service_healthy
    env_file:
      - ./src/.env
    command: poetry run alembic upgrade head

  billing-service-scheduler:
    env_file:
      - ./src/.env
    container_name: billing-service-scheduler
    environment:
      PYTHONPATH: /opt
    build:
      context: .
      dockerfile: infra/scheduler/Dockerfile
    networks:
      - billing-service-network
    depends_on:
      billing-service-postgres:
        condition: service_healthy
    command: poetry run python worker/main.py

networks:
  billing-service-network:
    external:
      name: billing-service-network

volumes:
  db_data:
