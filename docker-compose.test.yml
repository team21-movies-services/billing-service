version: "3.8"


services:

  test-billing-service-api:
    container_name: test-billing-service-api
    build:
      context: .
      dockerfile: infra/backend-test/Dockerfile
    networks:
      - test-billing-service-network
    env_file:
      - ./src/.env.test
    command: poetry run pytest -p no:cacheprovider

  test-billing-service-postgres:
    image: postgres:14
    container_name: test-billing-service-postgres
    environment:
      POSTGRES_DB: TEST_DB
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"
        ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - test-billing-service-network
    env_file:
      - ./.env
    volumes:
      - test_db_data:/var/lib/postgresql/data

networks:
  test-billing-service-network:
    external: true
volumes:
  test_db_data:
